% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utility.r
\name{formatLRDB}
\alias{formatLRDB}
\title{Process Ligand–Receptor Data Without Assigning New Random CPI-CC IDs}
\usage{
formatLRDB(interaction_type_df, ligands_df, receptors_df, g_to_u)
}
\arguments{
\item{interaction_type_df}{A \code{data.frame} with columns \code{c("cpi_cc_id", "interaction_type")}.}

\item{ligands_df}{A \code{data.frame} where the first column is \code{cpi_cc_id} and subsequent columns are ligand genes.}

\item{receptors_df}{A \code{data.frame} where the first column is \code{cpi_cc_id} and subsequent columns are receptor genes.}

\item{g_to_u}{A \code{data.frame} with columns \code{c("gene_name", "uniprot")}.}
}
\value{
A list with three elements:
\describe{
\item{db.diff}{A \code{data.frame} containing diffusion-dependent interactions
(ligands, receptors, and factor mappings from UniProt IDs to CPI-IDs).}
\item{db.cont}{A \code{data.frame} containing contact-dependent interactions, similarly structured.}
\item{intr.index}{A \code{data.frame} with columns \code{"id_cp_interaction"},
\code{"partner_a"}, and \code{"partner_b"}.}
}
}
\description{
This function processes user-supplied ligand–receptor data frames (ligands, receptors, and interaction types) and a gene-to-UniProt mapping data frame.
Rather than generating new CPI-CC IDs, it retains the existing IDs (assumed to be in the first column of each input data frame). The function also
removes duplicated interactions that have the exact same sets of ligands and receptors, as well as the same interaction type.
}
\details{
\enumerate{
\item Merges the provided data frames by \code{cpi_cc_id} into a single data frame.
\item Builds a "signature" for each interaction by sorting the ligand genes, sorting the receptor genes,
and combining them with the interaction type.
\item Removes duplicate rows with matching signatures, retaining only the first occurrence.
\item Preserves the user-provided \code{cpi_cc_id} rather than assigning new random IDs.
}
}
\examples{
\dontrun{
result <- process_LR_data(
  interaction_type_df,  # data.frame with columns [cpi_cc_id, interaction_type]
  ligands_df,           # data.frame with first column = cpi_cc_id, subsequent columns = ligand genes
  receptors_df,         # data.frame with first column = cpi_cc_id, subsequent columns = receptor genes
  g_to_u                # data.frame with columns [gene_name, uniprot]
)
}

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrappers.R
\name{inferIntrScore}
\alias{inferIntrScore}
\title{Calculate LRScore from the imputed L and R values}
\usage{
inferIntrScore(
  object,
  recep.smooth = FALSE,
  intr.type = c("diff", "cont"),
  perm.size = 1e+05,
  norm.method = c("default", "cpm", "none", "scanpy"),
  numCores = 1
)
}
\arguments{
\item{object}{A \linkS4class{CytoSignal} object, with \code{\link{imputeLR}}
already run.}

\item{recep.smooth}{A logical scalar. Whether to use the smoothed \eqn{R}
values which is imputed with DT method. Default \code{FALSE}.}

\item{intr.type}{A character vector. The type of interactions to calculate
the LR score. Choose from one or both of \code{"diff"} and \code{"cont"} for
diffusion-dependent and contact-dependent interactions, respectively. Default
uses both.}

\item{perm.size}{A numeric scalar. The number of permutations to perform.
Default \code{1e5} times.}

\item{norm.method}{The normalization method to apply to the imputed L and R}

\item{numCores}{SPARK::sparkx parameter. The number of cores to use. Default
\code{1}.}
}
\value{
A \linkS4class{CytoSignal} object updated. Entries in
\code{object@lrscore} slot will be updated with the LR scores and the
significance inferrence. When \code{recep.smooth} is by default \code{FALSE},
the \code{object@lrscore} slot will be updated with
\code{object@lrscore$`GauEps-Raw`} and \code{object@lrscore$`DT-Raw`}. When
\code{recep.smooth} is \code{TRUE}, the \code{object@lrscore} slot will be
updated with \code{object@lrscore$`GauEps-DT`} and
\code{object@lrscore$`DT-DT`}.
}
\description{
After running \code{\link{imputeLR}}, we can calculate the LR score for each
location. The LR score is calculated as the product of the imputed \eqn{L}
and \eqn{R} values. With the LR score inferred, we subsequently perform
permutation tests to construct the null distribution for testing the
significance of the interactions.
}
\examples{
\dontrun{
object <- findNN(object)
object <- imputeLR(object)
object <- inferIntrScore(object)
}
}
